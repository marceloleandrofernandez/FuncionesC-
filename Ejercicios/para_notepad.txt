#include "cabeceras.h"
#include "stdafx.h"
using namespace std;
void toqueteo(int arr[],int subin=0){

	arr[1] = arr[1] * 2;
}
void matrix(){
	
	int mat1[3] = { 3, 4, 5 };

	cout << "Hello World" << endl;
	cout << "antes de la funcion" << endl;
	for (int i = 0; i < 3; i++)
	{
		cout << mat1[i] << " ";
	}
	cout << endl;
	toqueteo(mat1);
	cout << "Despues de la funcion" << endl;
	for (int i = 0; i < 3; i++)
	{
		cout << mat1[i] << " ";
	}
}
void multipMatrices2x3(){
	cout << "Multiplica matrices CUADRADAS" << endl;
	//dimensiona las matrices  
	int mat1[3][3] = { { 5, 4, 5 }, { 7, 3, 5 }, { 1, 2, 3 } };
	int mat2[3][3] = { { 6, 7, 8 }, { 9, 8, 7 }, { 8, 7, 2 } };
	int mat3[3][3];
	// multiplica
	for (int i = 0; i < 3; i++){
		for (int j = 0; j < 3; j++){
			mat3[i][j] = 0;
			for (int k = 0; k < 3; k++){
				mat3[i][j] = mat3[i][j] + mat1[i][k] * mat2[k][j];
			}
		}

	}
	//muestra en pantalla el resultado
	for (int i = 0; i < 3; i++){
		for (int j = 0; j < 3; j++){
			cout << mat3[i][j] << "  ";
		}
		cout << "\n";
	}

	system("Pause");

}
void recorreMat(){
	const int N = 3;
	int mat1[N][N];
	srand(time(NULL));
	for (int i = 0; i < N; i++)
	{
		for (int j = 0; j < N; j++)
		{
			mat1[i][j] = rand() % 101;
			cout << mat1[i][j] << " ";
		}
		cout << endl;
	}
	cout << "Muestra elementos de la diagonal principal" << endl;
	for (int x = 0; x < N; x++)
	{
			cout << mat1[x][x] << endl;
	}

}
void variacionEstandar(){
	cout << "Variacion Estandar" << endl;
	const int N = 6; // en el Ejercicio pide 15 Elementos
	float media;
	float SIGMA;
	int mat[N] = { 4, 1, 11, 13, 2, 7 }; 
	//srand(time(NULL));
	for (int i = 0; i < N; i++)
	{
			//mat[i] = rand() % 101;
			cout << mat[i] << " - ";
			media += mat[i];
			
	}
	cout << endl;
	media /= N;
	cout << "La media es: " << media << endl;
	for (int  i = 0; i < N; i++)
	{
		//SIGMA += sqrt((1 / (N - 1)) * pow((mat[i] - media),2)); <<--- *(mal interpretado)*
		SIGMA += pow(mat[i] - media, 2);
	}
	cout << "La variacion es: " << sqrt(SIGMA/(N-1)) << endl;
}